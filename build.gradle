plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java-library'
}


group 'com.example'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

version = '1.0'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    /*mainModule = 'com.example.song_finder_fx'*/
    mainClass = 'com.example.song_finder_fx.Main'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


test {
    systemProperty 'file.encoding', 'UTF-8'
}



shadowJar {
    manifest {
        attributes 'Main-Class': 'com.example.Main'
    }
}

//javafx {
//    version = '21-ea+24'
//    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
//}

javafx {
    version = '21-ea+24' // Use the version that is compatible with your project
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing' ]
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // SQLite connection
    implementation 'org.xerial:sqlite-jdbc:3.41.2.2'

    // MySQL Connection
    // implementation 'mysql:mysql-connector-java:8.0.28'

    // https://mvnrepository.com/artifact/org.controlsfx/controlsfx
    implementation 'org.controlsfx:controlsfx:11.1.2'

    // https://mvnrepository.com/artifact/org.openjfx/javafx-media
    implementation 'org.openjfx:javafx-media:21.0.2'

    // https://mvnrepository.com/artifact/com.itextpdf/itext7-core
    implementation 'com.itextpdf:itext7-core:7.0.4'

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation 'com.opencsv:opencsv:5.7.1'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.15.3'

    // https://mvnrepository.com/artifact/io.helidon.webclient/helidon-webclient
    testImplementation 'io.helidon.webclient:helidon-webclient:4.0.5'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.7.2'

    //audio cut
    implementation files('libs/jl1.0.1.jar')

    // https://mvnrepository.com/artifact/net.sf.supercsv/super-csv
    implementation 'net.sf.supercsv:super-csv:2.4.0'

    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    implementation 'org.mindrot:jbcrypt:0.4'

    // https://mvnrepository.com/artifact/com.dustinredmond.fxtrayicon/FXTrayIcon
    implementation 'com.dustinredmond.fxtrayicon:FXTrayIcon:3.0.0'

    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    implementation 'javax.mail:javax.mail-api:1.6.2'

    implementation 'com.sun.mail:javax.mail:1.6.2'

    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'

    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20231013'


    // newly added for provide service to youtube Notification service
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.0'
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}
